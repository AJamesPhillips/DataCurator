
# A lot of this is copied from: https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04

upstream web_servers {
  server {{ RUNTIME_ENV.PRIVATE_IP_WEB_A }}:{{ RUNTIME_ENV.PRIVATE_PORT_WEB_A }};
}

# Redirect http -> https
server {
  listen 80;
  server_name {{ RUNTIME_ENV.REACT_APP_SERVER_HOST }};
  return 301 https://{{ RUNTIME_ENV.REACT_APP_SERVER_HOST }}$request_uri;
}

# Serve public assets or redirect to app servers
server {
{% include 'nginx_ssl.partial.j2' with context %}

  server_name {{ RUNTIME_ENV.REACT_APP_SERVER_HOST }};
  root {{ WEB_SERVER__PUBLIC_DIRECTORY }};

  location ~ /.well-known {
    allow all;
  }

  location /static {
    try_files $uri =404;
  }

  location /api {
    # TODO, when in maintenance mode, api should return empty 503 response
    # if (-f $document_root/maintenance.html) {
    #   return 503;
    # }

    proxy_pass http://web_servers;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /favicon.ico {
    rewrite ^ /favicon.ico break;
  }

  location / {
    rewrite ^ /index.html break;
  }

  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }

  #Defend against BitTorrent DDoS  http://blog.devops.co.il/post/108740168304/torrent-ddos-attack
  #location /announc {
  #  access_log off;
  #  error_log off;
  #  default_type text/plain;
  #  return 410 "d14:failure reason13:not a tracker8:retry in5:nevere";
  #
  # Or as someone in comments suggested:
  #  return 301 http://www.gov.cn/;
  #}
}
