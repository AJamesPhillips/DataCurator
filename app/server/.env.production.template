# public / shared config
NODE_ENV=production
## Additional note, on development and test, these values must be the same as
## the PRIVATE_SERVER_CONFIG_x environment variables
SERVER_SCHEME=https
SERVER_HOST=yourdomain.com  # must be a domain otherwise letsencrypt will fail
SERVER_PORT=443
LOG_LEVEL=5

# private server only config
PRIVATE_SERVER_CONFIG_SCHEME=http
PRIVATE_SERVER_CONFIG_HOST=127.0.0.1
PRIVATE_SERVER_CONFIG_PORT=4000
PRIVATE_SERVER_CONFIG_DB_DATABASE=worldsim_datacurator_prod_db
PRIVATE_SERVER_CONFIG_DB_USERNAME=postgres
PRIVATE_SERVER_CONFIG_DB_PASSWORD=some_long_random_string
PRIVATE_SERVER_CONFIG_DB_ADDRESS=localhost
PRIVATE_SERVER_CONFIG_DB_PORT=5432
PRIVATE_SERVER_CONFIG_DB_DIALECT=postgres
PRIVATE_SERVER_CONFIG_LOG_DB=1
PRIVATE_SERVER_CONFIG_LOG_APP_SERVER_DIRECTORY=/var/log/web_server/

## If the servers where on a private network with a load balancer on a seperate
## machine in front of the web server machines then the nginx on those web server
## machines would bind to the private ip address of the machine and on port 80.
## The IP address will be different between production and staging hence it needs
## to live in the .env file.
PRIVATE_IP_WEB_A=127.0.0.1
PRIVATE_PORT_WEB_A=8005

# Generated from create_env.js
# Generate your own by running
#    cd app
#    npm run build
#    export NODE_ENV=production && node compiled_all/scripts/create_env.js
PRIVATE_SERVER_CONFIG_ENCRYPTION_PASSWORD=some_long_random_string
